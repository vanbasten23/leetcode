/*
Climbing Stairs 
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
*/
class Solution {
public:
    int climbStairs(int n) {
      if (n<1) return 0;
      if (n==1) return 1;
      if (n==2) return 2;
      vector<int> num(n+1,0);
      num[0]=1;
      num[1]=1;
      for (int i=2;i<=n; ++i)
      {
          num[i]=num[i-1]+num[i-2];
      }
      return num[n];
    }
};

REMARK:
1. Easiest one. Use dynamic programming instead of recursion.